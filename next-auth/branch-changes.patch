From 960298bb8faf2775e2bea754654cc11556d34aad Mon Sep 17 00:00:00 2001
From: FRIDA LEMKE <frida.lemke@gmx.de>
Date: Tue, 5 Nov 2024 08:09:51 +0100
Subject: [PATCH] add solution works only for router not pages

---
 .../.env.example                              |   4 -
 .../next-auth-implementation_start/auth.ts    |   8 +
 .../next-auth-implementation_start/lib/db.ts  |  37 +++
 .../package-lock.json                         | 244 +++++++++++++++---
 .../package.json                              |   6 +-
 .../src/components/posts/Posts.js             |  24 +-
 .../src/pages/_app.js                         |  17 +-
 .../src/pages/api/auth/[...nextauth].js       |  65 +++++
 8 files changed, 340 insertions(+), 65 deletions(-)
 delete mode 100644 sessions/next-auth/next-auth-implementation_start/.env.example
 create mode 100644 sessions/next-auth/next-auth-implementation_start/auth.ts
 create mode 100644 sessions/next-auth/next-auth-implementation_start/lib/db.ts
 create mode 100644 sessions/next-auth/next-auth-implementation_start/src/pages/api/auth/[...nextauth].js

diff --git a/sessions/next-auth/next-auth-implementation_start/.env.example b/sessions/next-auth/next-auth-implementation_start/.env.example
deleted file mode 100644
index 3417406..0000000
--- a/sessions/next-auth/next-auth-implementation_start/.env.example
+++ /dev/null
@@ -1,4 +0,0 @@
-MONGODB_URI=<your database URI connection>
-
-GITHUB_ID=<github ID after you create a OAuth App>
-GITHUB_SECRET=<github SECRET after you create a OAuth App>
\ No newline at end of file
diff --git a/sessions/next-auth/next-auth-implementation_start/auth.ts b/sessions/next-auth/next-auth-implementation_start/auth.ts
new file mode 100644
index 0000000..abc7d18
--- /dev/null
+++ b/sessions/next-auth/next-auth-implementation_start/auth.ts
@@ -0,0 +1,8 @@
+import NextAuth from "next-auth"
+import { MongoDBAdapter } from "@auth/mongodb-adapter"
+import client from "./lib/db" 
+
+export const { handlers, auth, signIn, signOut } = NextAuth({
+  adapter: MongoDBAdapter(client),
+  providers: [],
+})
\ No newline at end of file
diff --git a/sessions/next-auth/next-auth-implementation_start/lib/db.ts b/sessions/next-auth/next-auth-implementation_start/lib/db.ts
new file mode 100644
index 0000000..330cbec
--- /dev/null
+++ b/sessions/next-auth/next-auth-implementation_start/lib/db.ts
@@ -0,0 +1,37 @@
+// This approach is taken from https://github.com/vercel/next.js/tree/canary/examples/with-mongodb
+import { MongoClient, ServerApiVersion } from "mongodb"
+ 
+if (!process.env.MONGODB_URI) {
+  throw new Error('Invalid/Missing environment variable: "MONGODB_URI"')
+}
+ 
+const uri = process.env.MONGODB_URI
+const options = {
+  serverApi: {
+    version: ServerApiVersion.v1,
+    strict: true,
+    deprecationErrors: true,
+  },
+}
+ 
+let client: MongoClient
+ 
+if (process.env.NODE_ENV === "development") {
+  // In development mode, use a global variable so that the value
+  // is preserved across module reloads caused by HMR (Hot Module Replacement).
+  let globalWithMongo = global as typeof globalThis & {
+    _mongoClient?: MongoClient
+  }
+ 
+  if (!globalWithMongo._mongoClient) {
+    globalWithMongo._mongoClient = new MongoClient(uri, options)
+  }
+  client = globalWithMongo._mongoClient
+} else {
+  // In production mode, it's best to not use a global variable.
+  client = new MongoClient(uri, options)
+}
+ 
+// Export a module-scoped MongoClient. By doing this in a
+// separate module, the client can be shared across functions.
+export default client
\ No newline at end of file
diff --git a/sessions/next-auth/next-auth-implementation_start/package-lock.json b/sessions/next-auth/next-auth-implementation_start/package-lock.json
index bd09aa8..be37ce8 100644
--- a/sessions/next-auth/next-auth-implementation_start/package-lock.json
+++ b/sessions/next-auth/next-auth-implementation_start/package-lock.json
@@ -8,11 +8,11 @@
       "name": "next-auth-implementation",
       "version": "0.1.0",
       "dependencies": {
-        "@auth/mongodb-adapter": "^2.0.1",
-        "mongodb": "^6.1.0",
+        "@auth/mongodb-adapter": "^2.6.0",
+        "mongodb": "^6.10.0",
         "mongoose": "^7.6.1",
         "next": "13.5.4",
-        "next-auth": "^4.23.2",
+        "next-auth": "^4.24.10",
         "react": "^18",
         "react-dom": "^18",
         "swr": "^2.2.4"
@@ -32,30 +32,55 @@
       }
     },
     "node_modules/@auth/core": {
-      "version": "0.16.1",
-      "resolved": "https://registry.npmjs.org/@auth/core/-/core-0.16.1.tgz",
-      "integrity": "sha512-V+YifnjpyOadiiTbxfYDV2xYWo8xpKNtwYVskAEKUSwMvE0FlSlP+10QGBpf0axS/AJFOO61IR6GncFF/IOrHQ==",
-      "dependencies": {
-        "@panva/hkdf": "^1.0.4",
-        "cookie": "0.5.0",
-        "jose": "^4.11.1",
-        "oauth4webapi": "^2.0.6",
+      "version": "0.34.2",
+      "resolved": "https://registry.npmjs.org/@auth/core/-/core-0.34.2.tgz",
+      "integrity": "sha512-KywHKRgLiF3l7PLyL73fjLSIBe1YNcA6sMeew4yMP6cfCWGXZrkkXd32AjRi1hlJ9nvovUBGZHvbn+LijO6ZeQ==",
+      "license": "ISC",
+      "optional": true,
+      "peer": true,
+      "dependencies": {
+        "@panva/hkdf": "^1.1.1",
+        "@types/cookie": "0.6.0",
+        "cookie": "0.6.0",
+        "jose": "^5.1.3",
+        "oauth4webapi": "^2.10.4",
         "preact": "10.11.3",
         "preact-render-to-string": "5.2.3"
       },
       "peerDependencies": {
+        "@simplewebauthn/browser": "^9.0.1",
+        "@simplewebauthn/server": "^9.0.2",
         "nodemailer": "^6.8.0"
       },
       "peerDependenciesMeta": {
+        "@simplewebauthn/browser": {
+          "optional": true
+        },
+        "@simplewebauthn/server": {
+          "optional": true
+        },
         "nodemailer": {
           "optional": true
         }
       }
     },
+    "node_modules/@auth/core/node_modules/jose": {
+      "version": "5.9.6",
+      "resolved": "https://registry.npmjs.org/jose/-/jose-5.9.6.tgz",
+      "integrity": "sha512-AMlnetc9+CV9asI19zHmrgS/WYsWUwCn2R7RzlbJWD7F9eWYUTGyBmU9o6PxngtLGOiDGPRu+Uc4fhKzbpteZQ==",
+      "license": "MIT",
+      "optional": true,
+      "peer": true,
+      "funding": {
+        "url": "https://github.com/sponsors/panva"
+      }
+    },
     "node_modules/@auth/core/node_modules/preact": {
       "version": "10.11.3",
       "resolved": "https://registry.npmjs.org/preact/-/preact-10.11.3.tgz",
       "integrity": "sha512-eY93IVpod/zG3uMF22Unl8h9KkrcKIRs2EGar8hwLZZDU1lkjph303V9HZBwufh2s736U6VXuhD109LYqPoffg==",
+      "optional": true,
+      "peer": true,
       "funding": {
         "type": "opencollective",
         "url": "https://opencollective.com/preact"
@@ -65,6 +90,8 @@
       "version": "5.2.3",
       "resolved": "https://registry.npmjs.org/preact-render-to-string/-/preact-render-to-string-5.2.3.tgz",
       "integrity": "sha512-aPDxUn5o3GhWdtJtW0svRC2SS/l8D9MAgo2+AWml+BhDImb27ALf04Q2d+AHqUUOc6RdSXFIBVa2gxzgMKgtZA==",
+      "optional": true,
+      "peer": true,
       "dependencies": {
         "pretty-format": "^3.8.0"
       },
@@ -73,16 +100,79 @@
       }
     },
     "node_modules/@auth/mongodb-adapter": {
-      "version": "2.0.1",
-      "resolved": "https://registry.npmjs.org/@auth/mongodb-adapter/-/mongodb-adapter-2.0.1.tgz",
-      "integrity": "sha512-faSROFem9oytJfLSBi8z/CxVHiNf0PjveyG8676t+0a5o7CyOLdmzPBv7SdcCjXzRCbc21v2IVKG6Gq67OHzIA==",
+      "version": "2.6.0",
+      "resolved": "https://registry.npmjs.org/@auth/mongodb-adapter/-/mongodb-adapter-2.6.0.tgz",
+      "integrity": "sha512-q3He1+etx3c80v+L8RxaHAAoj3b/x0HlL1IctnYa2JXjA38t6WIacR9o1DfEN1Xp0zBs94OocHemGirWrv1ucg==",
+      "license": "ISC",
       "dependencies": {
-        "@auth/core": "0.16.1"
+        "@auth/core": "0.29.0"
       },
       "peerDependencies": {
         "mongodb": "^6"
       }
     },
+    "node_modules/@auth/mongodb-adapter/node_modules/@auth/core": {
+      "version": "0.29.0",
+      "resolved": "https://registry.npmjs.org/@auth/core/-/core-0.29.0.tgz",
+      "integrity": "sha512-MdfEjU6WRjUnPG1+XeBWrTIlAsLZU6V0imCIqVDDDPxLI6UZWldXVqAA2EsDazGofV78jqiCLHaN85mJITDqdg==",
+      "license": "ISC",
+      "dependencies": {
+        "@panva/hkdf": "^1.1.1",
+        "@types/cookie": "0.6.0",
+        "cookie": "0.6.0",
+        "jose": "^5.1.3",
+        "oauth4webapi": "^2.4.0",
+        "preact": "10.11.3",
+        "preact-render-to-string": "5.2.3"
+      },
+      "peerDependencies": {
+        "@simplewebauthn/browser": "^9.0.1",
+        "@simplewebauthn/server": "^9.0.2",
+        "nodemailer": "^6.8.0"
+      },
+      "peerDependenciesMeta": {
+        "@simplewebauthn/browser": {
+          "optional": true
+        },
+        "@simplewebauthn/server": {
+          "optional": true
+        },
+        "nodemailer": {
+          "optional": true
+        }
+      }
+    },
+    "node_modules/@auth/mongodb-adapter/node_modules/jose": {
+      "version": "5.9.6",
+      "resolved": "https://registry.npmjs.org/jose/-/jose-5.9.6.tgz",
+      "integrity": "sha512-AMlnetc9+CV9asI19zHmrgS/WYsWUwCn2R7RzlbJWD7F9eWYUTGyBmU9o6PxngtLGOiDGPRu+Uc4fhKzbpteZQ==",
+      "license": "MIT",
+      "funding": {
+        "url": "https://github.com/sponsors/panva"
+      }
+    },
+    "node_modules/@auth/mongodb-adapter/node_modules/preact": {
+      "version": "10.11.3",
+      "resolved": "https://registry.npmjs.org/preact/-/preact-10.11.3.tgz",
+      "integrity": "sha512-eY93IVpod/zG3uMF22Unl8h9KkrcKIRs2EGar8hwLZZDU1lkjph303V9HZBwufh2s736U6VXuhD109LYqPoffg==",
+      "license": "MIT",
+      "funding": {
+        "type": "opencollective",
+        "url": "https://opencollective.com/preact"
+      }
+    },
+    "node_modules/@auth/mongodb-adapter/node_modules/preact-render-to-string": {
+      "version": "5.2.3",
+      "resolved": "https://registry.npmjs.org/preact-render-to-string/-/preact-render-to-string-5.2.3.tgz",
+      "integrity": "sha512-aPDxUn5o3GhWdtJtW0svRC2SS/l8D9MAgo2+AWml+BhDImb27ALf04Q2d+AHqUUOc6RdSXFIBVa2gxzgMKgtZA==",
+      "license": "MIT",
+      "dependencies": {
+        "pretty-format": "^3.8.0"
+      },
+      "peerDependencies": {
+        "preact": ">=10"
+      }
+    },
     "node_modules/@babel/runtime": {
       "version": "7.23.1",
       "resolved": "https://registry.npmjs.org/@babel/runtime/-/runtime-7.23.1.tgz",
@@ -184,9 +274,10 @@
       "dev": true
     },
     "node_modules/@mongodb-js/saslprep": {
-      "version": "1.1.0",
-      "resolved": "https://registry.npmjs.org/@mongodb-js/saslprep/-/saslprep-1.1.0.tgz",
-      "integrity": "sha512-Xfijy7HvfzzqiOAhAepF4SGN5e9leLkMvg/OPOF97XemjfVCYN/oWa75wnkc6mltMSTwY+XlbhWgUOJmkFspSw==",
+      "version": "1.1.9",
+      "resolved": "https://registry.npmjs.org/@mongodb-js/saslprep/-/saslprep-1.1.9.tgz",
+      "integrity": "sha512-tVkljjeEaAhCqTzajSdgbQ6gE6f3oneVwa3iXR6csiEwXXOFsiC6Uh9iAjAhXPtqa/XMDHWjjeNH/77m/Yq2dw==",
+      "license": "MIT",
       "dependencies": {
         "sparse-bitfield": "^3.0.3"
       }
@@ -397,6 +488,12 @@
         "tslib": "^2.4.0"
       }
     },
+    "node_modules/@types/cookie": {
+      "version": "0.6.0",
+      "resolved": "https://registry.npmjs.org/@types/cookie/-/cookie-0.6.0.tgz",
+      "integrity": "sha512-4Kh9a6B2bQciAhf7FSuMRRkUWecJgJu9nPnx3yzpsfXX/c50REIqpHY4C82bXP90qrLtXtkDxTZosYO3UpOwlA==",
+      "license": "MIT"
+    },
     "node_modules/@types/json5": {
       "version": "0.0.29",
       "resolved": "https://registry.npmjs.org/@types/json5/-/json5-0.0.29.tgz",
@@ -807,9 +904,10 @@
       }
     },
     "node_modules/bson": {
-      "version": "6.1.0",
-      "resolved": "https://registry.npmjs.org/bson/-/bson-6.1.0.tgz",
-      "integrity": "sha512-yiQ3KxvpVoRpx1oD1uPz4Jit9tAVTJgjdmjDKtUErkOoL9VNoF8Dd58qtAOL5E40exx2jvAT9sqdRSK/r+SHlA==",
+      "version": "6.9.0",
+      "resolved": "https://registry.npmjs.org/bson/-/bson-6.9.0.tgz",
+      "integrity": "sha512-X9hJeyeM0//Fus+0pc5dSUMhhrrmWwQUtdavaQeF3Ta6m69matZkGWV/MrBcnwUeLC8W9kwwc2hfkZgUuCX3Ig==",
+      "license": "Apache-2.0",
       "engines": {
         "node": ">=16.20.1"
       }
@@ -912,9 +1010,10 @@
       "dev": true
     },
     "node_modules/cookie": {
-      "version": "0.5.0",
-      "resolved": "https://registry.npmjs.org/cookie/-/cookie-0.5.0.tgz",
-      "integrity": "sha512-YZ3GUyn/o8gfKJlnlX7g7xq4gyO6OSuhGPKaaGssGB2qgDUS0gPgtTvoyZLTt9Ab6dC4hfc9dV5arkvc/OCmrw==",
+      "version": "0.6.0",
+      "resolved": "https://registry.npmjs.org/cookie/-/cookie-0.6.0.tgz",
+      "integrity": "sha512-U71cyTamuh1CRNCfpGY6to28lxvNwPG4Guz/EVjgf3Jmzv0vlDp1atT9eS5dDjMYHucpHbWns6Lwf3BKz6svdw==",
+      "license": "MIT",
       "engines": {
         "node": ">= 0.6"
       }
@@ -2392,9 +2491,10 @@
       }
     },
     "node_modules/jose": {
-      "version": "4.15.2",
-      "resolved": "https://registry.npmjs.org/jose/-/jose-4.15.2.tgz",
-      "integrity": "sha512-IY73F228OXRl9ar3jJagh7Vnuhj/GzBunPiZP13K0lOl7Am9SoWW3kEzq3MCllJMTtZqHTiDXQvoRd4U95aU6A==",
+      "version": "4.15.9",
+      "resolved": "https://registry.npmjs.org/jose/-/jose-4.15.9.tgz",
+      "integrity": "sha512-1vUQX+IdDMVPj4k8kOxgUqlcK518yluMuGZwqlr44FS1ppZB/5GWh4rZG89erpOBOJjU/OBsnCVFfapsRz6nEA==",
+      "license": "MIT",
       "funding": {
         "url": "https://github.com/sponsors/panva"
       }
@@ -2598,13 +2698,14 @@
       }
     },
     "node_modules/mongodb": {
-      "version": "6.1.0",
-      "resolved": "https://registry.npmjs.org/mongodb/-/mongodb-6.1.0.tgz",
-      "integrity": "sha512-AvzNY0zMkpothZ5mJAaIo2bGDjlJQqqAbn9fvtVgwIIUPEfdrqGxqNjjbuKyrgQxg2EvCmfWdjq+4uj96c0YPw==",
+      "version": "6.10.0",
+      "resolved": "https://registry.npmjs.org/mongodb/-/mongodb-6.10.0.tgz",
+      "integrity": "sha512-gP9vduuYWb9ZkDM546M+MP2qKVk5ZG2wPF63OvSRuUbqCR+11ZCAE1mOfllhlAG0wcoJY5yDL/rV3OmYEwXIzg==",
+      "license": "Apache-2.0",
       "dependencies": {
-        "@mongodb-js/saslprep": "^1.1.0",
-        "bson": "^6.1.0",
-        "mongodb-connection-string-url": "^2.6.0"
+        "@mongodb-js/saslprep": "^1.1.5",
+        "bson": "^6.7.0",
+        "mongodb-connection-string-url": "^3.0.0"
       },
       "engines": {
         "node": ">=16.20.1"
@@ -2651,6 +2752,50 @@
         "whatwg-url": "^11.0.0"
       }
     },
+    "node_modules/mongodb/node_modules/@types/whatwg-url": {
+      "version": "11.0.5",
+      "resolved": "https://registry.npmjs.org/@types/whatwg-url/-/whatwg-url-11.0.5.tgz",
+      "integrity": "sha512-coYR071JRaHa+xoEvvYqvnIHaVqaYrLPbsufM9BF63HkwI5Lgmy2QR8Q5K/lYDYo5AK82wOvSOS0UsLTpTG7uQ==",
+      "license": "MIT",
+      "dependencies": {
+        "@types/webidl-conversions": "*"
+      }
+    },
+    "node_modules/mongodb/node_modules/mongodb-connection-string-url": {
+      "version": "3.0.1",
+      "resolved": "https://registry.npmjs.org/mongodb-connection-string-url/-/mongodb-connection-string-url-3.0.1.tgz",
+      "integrity": "sha512-XqMGwRX0Lgn05TDB4PyG2h2kKO/FfWJyCzYQbIhXUxz7ETt0I/FqHjUeqj37irJ+Dl1ZtU82uYyj14u2XsZKfg==",
+      "license": "Apache-2.0",
+      "dependencies": {
+        "@types/whatwg-url": "^11.0.2",
+        "whatwg-url": "^13.0.0"
+      }
+    },
+    "node_modules/mongodb/node_modules/tr46": {
+      "version": "4.1.1",
+      "resolved": "https://registry.npmjs.org/tr46/-/tr46-4.1.1.tgz",
+      "integrity": "sha512-2lv/66T7e5yNyhAAC4NaKe5nVavzuGJQVVtRYLyQ2OI8tsJ61PMLlelehb0wi2Hx6+hT/OJUWZcw8MjlSRnxvw==",
+      "license": "MIT",
+      "dependencies": {
+        "punycode": "^2.3.0"
+      },
+      "engines": {
+        "node": ">=14"
+      }
+    },
+    "node_modules/mongodb/node_modules/whatwg-url": {
+      "version": "13.0.0",
+      "resolved": "https://registry.npmjs.org/whatwg-url/-/whatwg-url-13.0.0.tgz",
+      "integrity": "sha512-9WWbymnqj57+XEuqADHrCJ2eSXzn8WXIW/YSGaZtb2WKAInQ6CHfaUUcTyyver0p8BDg5StLQq8h1vtZuwmOig==",
+      "license": "MIT",
+      "dependencies": {
+        "tr46": "^4.1.1",
+        "webidl-conversions": "^7.0.0"
+      },
+      "engines": {
+        "node": ">=16"
+      }
+    },
     "node_modules/mongoose": {
       "version": "7.6.1",
       "resolved": "https://registry.npmjs.org/mongoose/-/mongoose-7.6.1.tgz",
@@ -2818,14 +2963,15 @@
       }
     },
     "node_modules/next-auth": {
-      "version": "4.23.2",
-      "resolved": "https://registry.npmjs.org/next-auth/-/next-auth-4.23.2.tgz",
-      "integrity": "sha512-VRmInu0r/yZNFQheDFeOKtiugu3bt90Po3owAQDnFQ3YLQFmUKgFjcE2+3L0ny5jsJpBXaKbm7j7W2QTc6Ye2A==",
+      "version": "4.24.10",
+      "resolved": "https://registry.npmjs.org/next-auth/-/next-auth-4.24.10.tgz",
+      "integrity": "sha512-8NGqiRO1GXBcVfV8tbbGcUgQkAGsX4GRzzXXea4lDikAsJtD5KiEY34bfhUOjHLvr6rT6afpcxw2H8EZqOV6aQ==",
+      "license": "ISC",
       "dependencies": {
         "@babel/runtime": "^7.20.13",
         "@panva/hkdf": "^1.0.2",
-        "cookie": "^0.5.0",
-        "jose": "^4.11.4",
+        "cookie": "^0.7.0",
+        "jose": "^4.15.5",
         "oauth": "^0.9.15",
         "openid-client": "^5.4.0",
         "preact": "^10.6.3",
@@ -2833,26 +2979,40 @@
         "uuid": "^8.3.2"
       },
       "peerDependencies": {
-        "next": "^12.2.5 || ^13",
+        "@auth/core": "0.34.2",
+        "next": "^12.2.5 || ^13 || ^14 || ^15",
         "nodemailer": "^6.6.5",
         "react": "^17.0.2 || ^18",
         "react-dom": "^17.0.2 || ^18"
       },
       "peerDependenciesMeta": {
+        "@auth/core": {
+          "optional": true
+        },
         "nodemailer": {
           "optional": true
         }
       }
     },
+    "node_modules/next-auth/node_modules/cookie": {
+      "version": "0.7.2",
+      "resolved": "https://registry.npmjs.org/cookie/-/cookie-0.7.2.tgz",
+      "integrity": "sha512-yki5XnKuf750l50uGTllt6kKILY4nQ1eNIQatoXEByZ5dWgnKqbnqmTrBE5B4N7lrMJKQ2ytWMiTO2o0v6Ew/w==",
+      "license": "MIT",
+      "engines": {
+        "node": ">= 0.6"
+      }
+    },
     "node_modules/oauth": {
       "version": "0.9.15",
       "resolved": "https://registry.npmjs.org/oauth/-/oauth-0.9.15.tgz",
       "integrity": "sha512-a5ERWK1kh38ExDEfoO6qUHJb32rd7aYmPHuyCu3Fta/cnICvYmgd2uhuKXvPD+PXB+gCEYYEaQdIRAjCOwAKNA=="
     },
     "node_modules/oauth4webapi": {
-      "version": "2.3.0",
-      "resolved": "https://registry.npmjs.org/oauth4webapi/-/oauth4webapi-2.3.0.tgz",
-      "integrity": "sha512-JGkb5doGrwzVDuHwgrR4nHJayzN4h59VCed6EW8Tql6iHDfZIabCJvg6wtbn5q6pyB2hZruI3b77Nudvq7NmvA==",
+      "version": "2.17.0",
+      "resolved": "https://registry.npmjs.org/oauth4webapi/-/oauth4webapi-2.17.0.tgz",
+      "integrity": "sha512-lbC0Z7uzAFNFyzEYRIC+pkSVvDHJTbEW+dYlSBAlCYDe6RxUkJ26bClhk8ocBZip1wfI9uKTe0fm4Ib4RHn6uQ==",
+      "license": "MIT",
       "funding": {
         "url": "https://github.com/sponsors/panva"
       }
diff --git a/sessions/next-auth/next-auth-implementation_start/package.json b/sessions/next-auth/next-auth-implementation_start/package.json
index 96a8994..67b157b 100644
--- a/sessions/next-auth/next-auth-implementation_start/package.json
+++ b/sessions/next-auth/next-auth-implementation_start/package.json
@@ -9,11 +9,11 @@
     "lint": "next lint"
   },
   "dependencies": {
-    "@auth/mongodb-adapter": "^2.0.1",
-    "mongodb": "^6.1.0",
+    "@auth/mongodb-adapter": "^2.6.0",
+    "mongodb": "^6.10.0",
     "mongoose": "^7.6.1",
     "next": "13.5.4",
-    "next-auth": "^4.23.2",
+    "next-auth": "^4.24.10",
     "react": "^18",
     "react-dom": "^18",
     "swr": "^2.2.4"
diff --git a/sessions/next-auth/next-auth-implementation_start/src/components/posts/Posts.js b/sessions/next-auth/next-auth-implementation_start/src/components/posts/Posts.js
index 0f6e236..493c85f 100644
--- a/sessions/next-auth/next-auth-implementation_start/src/components/posts/Posts.js
+++ b/sessions/next-auth/next-auth-implementation_start/src/components/posts/Posts.js
@@ -1,15 +1,19 @@
 import { postsList } from "./Posts.module.css";
+import { useSession } from "next-auth/react";
 
 export default function Posts({ posts }) {
-    return (
-        <div className={postsList}>
-            <h1>Posts</h1>
-            {posts?.map((post) => (
-                <div key={post._id}>
-                    <h2>{post.title}</h2>
-                    <p>{post.content}</p>
-                </div>
-            ))}
+  const { data: session, status } = useSession();
+  return (
+    <div className={postsList}>
+      <h1>Posts</h1>
+      {session && <p>Signed in as {session.user.email}</p>}
+      {!session && <p>Not signed in</p>}
+      {posts?.map((post) => (
+        <div key={post._id}>
+          <h2>{post.title}</h2>
+          <p>{post.content}</p>
         </div>
-    );
+      ))}
+    </div>
+  );
 }
diff --git a/sessions/next-auth/next-auth-implementation_start/src/pages/_app.js b/sessions/next-auth/next-auth-implementation_start/src/pages/_app.js
index d406ece..ee8c8b6 100644
--- a/sessions/next-auth/next-auth-implementation_start/src/pages/_app.js
+++ b/sessions/next-auth/next-auth-implementation_start/src/pages/_app.js
@@ -3,10 +3,15 @@ import "@/styles/globals.css";
 
 import { SessionProvider } from "next-auth/react";
 
-export default function App({ Component, pageProps }) {
-    return (
-        <Main_Layout>
-            <Component {...pageProps} />
-        </Main_Layout>
-    );
+export default function App({
+  Component,
+  pageProps: { session, ...pageProps },
+}) {
+  return (
+    <SessionProvider session={session}>
+      <Main_Layout>
+        <Component {...pageProps} />
+      </Main_Layout>
+    </SessionProvider>
+  );
 }
diff --git a/sessions/next-auth/next-auth-implementation_start/src/pages/api/auth/[...nextauth].js b/sessions/next-auth/next-auth-implementation_start/src/pages/api/auth/[...nextauth].js
new file mode 100644
index 0000000..54401b6
--- /dev/null
+++ b/sessions/next-auth/next-auth-implementation_start/src/pages/api/auth/[...nextauth].js
@@ -0,0 +1,65 @@
+import NextAuth from "next-auth";
+import GithubProvider from "next-auth/providers/github";
+
+export const authOptions = {
+  // Configure one or more authentication providers
+  providers: [
+    GithubProvider({
+      clientId: process.env.GITHUB_ID,
+      clientSecret: process.env.GITHUB_SECRET,
+      profile(profile) {
+        return {
+          id: profile.id,
+          // This ID is required but it will not be saved in your users collection
+          name: profile.name,
+          email: profile.email,
+          image: profile.avatar_url,
+
+          // You can add any other properties you want to the user object
+          admin: false,
+          preferedColors: ["#dddddd", "#ffffff"],
+        };
+      },
+    }),
+    // ...add more providers here
+  ],
+  adapter: MongoDBAdapter(clientPromise),
+  callbacks: {
+    async session({ session, user }) {
+      // The user object from the database contains the ID of the user in your database
+
+      session.user.userId = user.id;
+
+      // With the code above you can add the user ID to the session object and use it in your pages
+
+      // Make sure you console.log the session and user objects to see what they contain
+
+      return session;
+    },
+  },
+};
+
+// export default NextAuth(authOptions);
+
+// const authOptions = {
+//     providers: [
+//       Providers.GitHub({
+//         clientId: process.env.GITHUB_ID,
+//         clientSecret: process.env.GITHUB_SECRET,
+//       }),
+//     ],
+//     adapter: MongoDBAdapter(clientPromise),
+//     callbacks: {
+//       async session({ session, user }) {
+//         // The user object from the database contains the ID of the user in your database
+
+//         session.user.userId = user.id;
+
+//         // With the code above you can add the user ID to the session object and use it in your pages
+
+//         // Make sure you console.log the session and user objects to see what they contain
+
+//         return session;
+//       },
+//     },
+//   };
-- 
2.44.0

